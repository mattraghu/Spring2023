% Program P1_1
% % Generation of a Unit Sample Sequence
% clf;
% % Generate a vector from -10 to 20
% n = -10:20;
% % Generate the unit sample sequence
% u = [zeros(1,10) 1 zeros(1,20)];

% % Plot the unit sample sequence
% stem(n,u);
% xlabel('Time index n');ylabel('Amplitude');
% title('Unit Sample Sequence');
% axis([-10 20 0 1.2]);

% % Q1.3	The modified Program P1_1 to generate a delayed unit sample sequence ud[n] with a delay of 11 samples is given below along with the sequence generated by running this program.
% 
% % Generation of a Unit Sample Sequence
% clf;
% % Generate a vector from -10 to 20
% n = -10:20;
% % Generate the unit sample sequence
% d = 11;
% ud = [zeros(1,10+d) 1 zeros(1,20-d)];
% 
% % Plot the unit sample sequence
% stem(n,ud);
% xlabel('Time index n');ylabel('Amplitude');
% title('Unit Sample Sequence');
% axis([-10 20 0 1.2]);
% 
% % Program Q1_5
% % Generation of an ADVANCED Unit Step Sequence
% clf;
% % Generate a vector from -10 to 20
% n = -10:20;
% % Generate the ADVANCED unit step sequence
% sd = [zeros(1,3) ones(1,28)];
% % Plot the ADVANCED unit step sequence
% stem(n,sd);
% xlabel('Time index n');ylabel('Amplitude');
% title('ADVANCED Unit Step Sequence');
% axis([-10 20 0 1.2]);

% % Program P1_4
% % Generation of a sinusoidal sequence
% n = 0:49;
% f = .08;
% phase = -pi/2;
% A = 2.5;
% arg = 2*pi*f*n - phase;
% x = A*cos(arg);
% clf; % Clear old graph
% stairs(n,x); % Plot the generated sequence
% axis([0 49 -2.5 2.5]);
% grid;
% title('Sinusoidal Sequence');
% xlabel('Time index n');
% ylabel('Amplitude');
% axis;
% disp(bandpower(x));
% 
% % Compute The Average Power
% averagePower = mean(x.^2);
% disp(averagePower);


% % Program P1_6
% % Generation of amplitude modulated sequence
% clf;
% n = 0:100;
% m = 0.4;fH = 0.1; fL = 0.01;
% xH = sin(2*pi*fH*n);
% xL = sin(2*pi*fL*n);
% y = (1+m*xL).*xH;
% stem(n,y);
% grid;
% xlabel('Time index n');
% ylabel('Amplitude');


% Program P1_7
% Generation of a swept frequency sinusoidal sequence
n = 0:100;
a = (3*pi/5-pi/5)/200;
b = pi/5;
arg = a*n.*n + b*n;
x = cos(arg);
clf;
stem(n, x);
axis([0,100,-1.5,1.5]);
title('Swept-Frequency Sinusoidal Signal');
xlabel('Time index n');
ylabel('Amplitude');
grid; 
axis;